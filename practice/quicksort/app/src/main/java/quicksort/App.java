/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quicksort;

public class App {
    public static void main(String[] args) {
        int[] array = {3,9,4,7,5,0,1,6,8,2};

        int[] resultArray = new App().solution(array);

        System.out.print("resultArray : ");
        for (int a: resultArray) {
            System.out.print(a + ", ");
        }
        System.out.println();
    }

    public int partition(int[] arr, int start, int end) {
        int pivot = arr[(start + end) / 2];

        while (start <= end) {
            while(arr[start] < pivot) { // start는 오른쪽으로 1칸씩 이동
                start++;
            }

            while (pivot < arr[end]) { // end는 왼쪽으로 1칸씩 이동
                end--;
            }

            if(start <= end) {
                swap(arr, start, end);
                start++;
                end--;
            }
        }
        return start;
    }

    private void swap(int[] arr, int start, int end) {
        int tmp = arr[start];
        arr[start] = arr[end];
        arr[end] = tmp;
    }

    public void quickSort(int[] arr, int start, int end) {
        // 오른쪽방 첫번째 값 리턴
        int part2FirstIndex = partition(arr, start, end);

        // 왼쪽 파티션 정렬
        if(start < part2FirstIndex -1) {
            quickSort(arr, start, part2FirstIndex - 1);
        }

        // 오른쪽 파티션 정렬
        if(part2FirstIndex < end) {
            quickSort(arr, part2FirstIndex, end);
        }
    }
    public int[] solution(int[] arr) {
        quickSort(arr, 0, arr.length - 1);

        return arr;
    }
}
